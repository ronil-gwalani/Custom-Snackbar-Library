kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/ronil/Documents/Android-Projects/Custom-Snackbar-Library/customsnackbar/src/main/java/org/ronil/customsnackbar/CustomSnackBar.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:rememberSnackBarState visibility:public modality:FINAL <> () returnType:org.ronil.customsnackbar.ShackBarState
  annotations:
    Composable
  BLOCK_BODY
    VAR name:state type:org.ronil.customsnackbar.ShackBarState [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=org.ronil.customsnackbar.ShackBarState origin=null
        <T>: org.ronil.customsnackbar.ShackBarState
        calculation: BLOCK type=kotlin.Function0<org.ronil.customsnackbar.ShackBarState> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun rememberSnackBarState$lambda$0 (): org.ronil.customsnackbar.ShackBarState declared in org.ronil.customsnackbar.CustomSnackBarKt' type=kotlin.Function0<org.ronil.customsnackbar.ShackBarState> origin=INLINE_LAMBDA reflectionTarget=null
    BLOCK type=kotlin.Unit origin=ARGUMENTS_REORDERING_FOR_CALL
      VAR IR_TEMPORARY_VARIABLE name:tmp3_visible type:kotlin.Boolean [val]
        CALL 'public final fun <get-isVisible> (): kotlin.Boolean declared in org.ronil.customsnackbar.ShackBarState' type=kotlin.Boolean origin=GET_PROPERTY
          $this: GET_VAR 'val state: org.ronil.customsnackbar.ShackBarState [val] declared in org.ronil.customsnackbar.CustomSnackBarKt.rememberSnackBarState' type=org.ronil.customsnackbar.ShackBarState origin=null
      VAR IR_TEMPORARY_VARIABLE name:tmp4_enter type:androidx.compose.animation.EnterTransition [val]
        CALL 'public final fun plus (enter: androidx.compose.animation.EnterTransition): androidx.compose.animation.EnterTransition [operator] declared in androidx.compose.animation.EnterTransition' type=androidx.compose.animation.EnterTransition origin=PLUS
          $this: CALL 'public final fun slideInVertically$default (animationSpec: androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>?, initialOffsetY: kotlin.Function1<@[ParameterName(name = "fullHeight")] kotlin.Int, kotlin.Int>?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.animation.EnterTransition declared in androidx.compose.animation.EnterExitTransitionKt' type=androidx.compose.animation.EnterTransition origin=DEFAULT_DISPATCH_CALL
            animationSpec: COMPOSITE type=androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>? value=null
            initialOffsetY: BLOCK type=kotlin.Function1<@[ParameterName(name = "fullHeight")] kotlin.Int, kotlin.Int> origin=LAMBDA
              COMPOSITE type=kotlin.Unit origin=null
              CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function1<@[ParameterName(name = "fullHeight")] kotlin.Int, kotlin.Int> origin=null
                <T>: kotlin.Function1<@[ParameterName(name = "fullHeight")] kotlin.Int, kotlin.Int>
                dynamicCall: CALL 'public final fun invoke (): kotlin.Function1<@[ParameterName(name = "fullHeight")] kotlin.Int, kotlin.Int> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function1<@[ParameterName(name = "fullHeight")] kotlin.Int, kotlin.Int> origin=null
                bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                  tag: CONST Int type=kotlin.Int value=6
                  owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
                  name: CONST String type=kotlin.String value="metafactory"
                  descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
                  isInterface: CONST Boolean type=kotlin.Boolean value=false
                bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
                  CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                    method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
                  RAW_FUNCTION_REFERENCE 'private final fun rememberSnackBarState$lambda$1 (it: @[ParameterName(name = "fullHeight")] kotlin.Int): kotlin.Int declared in org.ronil.customsnackbar.CustomSnackBarKt' type=kotlin.Any
                  CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                    method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: @[ParameterName(name = "fullHeight")] kotlin.Int?): kotlin.Int? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
            $mask0: CONST Int type=kotlin.Int value=1
            $handler: CONST Null type=kotlin.Any? value=null
          enter: CALL 'public final fun fadeIn$default (animationSpec: androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>?, initialAlpha: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.animation.EnterTransition declared in androidx.compose.animation.EnterExitTransitionKt' type=androidx.compose.animation.EnterTransition origin=DEFAULT_DISPATCH_CALL
            animationSpec: COMPOSITE type=androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>? value=null
            initialAlpha: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
              CONST Float type=kotlin.Float value=0.0
            $mask0: CONST Int type=kotlin.Int value=3
            $handler: CONST Null type=kotlin.Any? value=null
      VAR IR_TEMPORARY_VARIABLE name:tmp5_exit type:androidx.compose.animation.ExitTransition [val]
        CALL 'public final fun plus (exit: androidx.compose.animation.ExitTransition): androidx.compose.animation.ExitTransition [operator] declared in androidx.compose.animation.ExitTransition' type=androidx.compose.animation.ExitTransition origin=PLUS
          $this: CALL 'public final fun slideOutVertically$default (animationSpec: androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>?, targetOffsetY: kotlin.Function1<@[ParameterName(name = "fullHeight")] kotlin.Int, kotlin.Int>?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.animation.ExitTransition declared in androidx.compose.animation.EnterExitTransitionKt' type=androidx.compose.animation.ExitTransition origin=DEFAULT_DISPATCH_CALL
            animationSpec: COMPOSITE type=androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>? value=null
            targetOffsetY: BLOCK type=kotlin.Function1<@[ParameterName(name = "fullHeight")] kotlin.Int, kotlin.Int> origin=LAMBDA
              COMPOSITE type=kotlin.Unit origin=null
              CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function1<@[ParameterName(name = "fullHeight")] kotlin.Int, kotlin.Int> origin=null
                <T>: kotlin.Function1<@[ParameterName(name = "fullHeight")] kotlin.Int, kotlin.Int>
                dynamicCall: CALL 'public final fun invoke (): kotlin.Function1<@[ParameterName(name = "fullHeight")] kotlin.Int, kotlin.Int> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function1<@[ParameterName(name = "fullHeight")] kotlin.Int, kotlin.Int> origin=null
                bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                  tag: CONST Int type=kotlin.Int value=6
                  owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
                  name: CONST String type=kotlin.String value="metafactory"
                  descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
                  isInterface: CONST Boolean type=kotlin.Boolean value=false
                bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
                  CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                    method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
                  RAW_FUNCTION_REFERENCE 'private final fun rememberSnackBarState$lambda$2 (it: @[ParameterName(name = "fullHeight")] kotlin.Int): kotlin.Int declared in org.ronil.customsnackbar.CustomSnackBarKt' type=kotlin.Any
                  CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                    method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: @[ParameterName(name = "fullHeight")] kotlin.Int?): kotlin.Int? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
            $mask0: CONST Int type=kotlin.Int value=1
            $handler: CONST Null type=kotlin.Any? value=null
          exit: CALL 'public final fun fadeOut$default (animationSpec: androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>?, targetAlpha: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.animation.ExitTransition declared in androidx.compose.animation.EnterExitTransitionKt' type=androidx.compose.animation.ExitTransition origin=DEFAULT_DISPATCH_CALL
            animationSpec: COMPOSITE type=androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>? value=null
            targetAlpha: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
              CONST Float type=kotlin.Float value=0.0
            $mask0: CONST Int type=kotlin.Int value=3
            $handler: CONST Null type=kotlin.Any? value=null
      VAR IR_TEMPORARY_VARIABLE name:tmp6_modifier type:androidx.compose.ui.Modifier [val]
        CALL 'public final fun wrapContentHeight$default (align: androidx.compose.ui.Alignment.Vertical?, unbounded: kotlin.Boolean, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          $receiver: CALL 'public final fun zIndex (zIndex: kotlin.Float): androidx.compose.ui.Modifier declared in androidx.compose.ui.ZIndexModifierKt' type=androidx.compose.ui.Modifier origin=null
            $receiver: CALL 'public final fun fillMaxWidth$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
              $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static]' type=androidx.compose.ui.Modifier.Companion origin=null
              fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              $mask0: CONST Int type=kotlin.Int value=1
              $handler: CONST Null type=kotlin.Any? value=null
            zIndex: CONST Float type=kotlin.Float value=3.4028235E38
          align: COMPOSITE type=androidx.compose.ui.Alignment.Vertical? origin=DEFAULT_VALUE
            CONST Null type=androidx.compose.ui.Alignment.Vertical? value=null
          unbounded: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
            CONST Boolean type=kotlin.Boolean value=false
          $mask0: CONST Int type=kotlin.Int value=3
          $handler: CONST Null type=kotlin.Any? value=null
      CALL 'public final fun AnimatedVisibility$default (visible: kotlin.Boolean, modifier: androidx.compose.ui.Modifier?, enter: androidx.compose.animation.EnterTransition?, exit: androidx.compose.animation.ExitTransition?, label: kotlin.String?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.AnimatedVisibilityScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.animation.AnimatedVisibilityKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
        visible: GET_VAR 'val tmp3_visible: kotlin.Boolean [val] declared in org.ronil.customsnackbar.CustomSnackBarKt.rememberSnackBarState' type=kotlin.Boolean origin=null
        modifier: GET_VAR 'val tmp6_modifier: androidx.compose.ui.Modifier [val] declared in org.ronil.customsnackbar.CustomSnackBarKt.rememberSnackBarState' type=androidx.compose.ui.Modifier origin=null
        enter: GET_VAR 'val tmp4_enter: androidx.compose.animation.EnterTransition [val] declared in org.ronil.customsnackbar.CustomSnackBarKt.rememberSnackBarState' type=androidx.compose.animation.EnterTransition origin=null
        exit: GET_VAR 'val tmp5_exit: androidx.compose.animation.ExitTransition [val] declared in org.ronil.customsnackbar.CustomSnackBarKt.rememberSnackBarState' type=androidx.compose.animation.ExitTransition origin=null
        label: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
          CONST Null type=kotlin.String? value=null
        content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.AnimatedVisibilityScope, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.AnimatedVisibilityScope, kotlin.Unit> origin=null
            <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.AnimatedVisibilityScope, kotlin.Unit>
            dynamicCall: CALL 'public final fun invoke (p0: org.ronil.customsnackbar.ShackBarState): @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.AnimatedVisibilityScope, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.AnimatedVisibilityScope, kotlin.Unit> origin=null
              p0: GET_VAR 'val state: org.ronil.customsnackbar.ShackBarState [val] declared in org.ronil.customsnackbar.CustomSnackBarKt.rememberSnackBarState' type=org.ronil.customsnackbar.ShackBarState origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun rememberSnackBarState$lambda$4 ($state: org.ronil.customsnackbar.ShackBarState, $this$AnimatedVisibility: androidx.compose.animation.AnimatedVisibilityScope): kotlin.Unit? declared in org.ronil.customsnackbar.CustomSnackBarKt' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.animation.AnimatedVisibilityScope): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        $mask0: CONST Int type=kotlin.Int value=16
        $handler: CONST Null type=kotlin.Any? value=null
    RETURN type=kotlin.Nothing from='public final fun rememberSnackBarState (): org.ronil.customsnackbar.ShackBarState declared in org.ronil.customsnackbar.CustomSnackBarKt'
      GET_VAR 'val state: org.ronil.customsnackbar.ShackBarState [val] declared in org.ronil.customsnackbar.CustomSnackBarKt.rememberSnackBarState' type=org.ronil.customsnackbar.ShackBarState origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=org.ronil.customsnackbar.ShackBarState origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:784)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 68 more


